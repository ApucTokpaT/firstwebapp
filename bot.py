from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import json
import logging # –î–æ–±–∞–≤–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# !!! –í–ê–ñ–ù–û: –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –í–ê–® —Ä–µ–∞–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω –æ—Ç @BotFather !!!
BOT_TOKEN = "7588965175:AAEorKSyas6prFbVf01hf83vLbHsci75p9s"
# !!! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ URL —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–º, —á—Ç–æ –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –≤ @BotFather !!!
WEB_APP_URL = "https://ApucTokpaT.github.io/firstwebapp/"
# ----------------

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π Web App."""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É, —É–∫–∞–∑—ã–≤–∞—è URL –Ω–∞—à–µ–≥–æ Web App
    keyboard = [
        [InlineKeyboardButton("üöÄ –û—Ç–∫—Ä—ã—Ç—å –ú–æ–µ –í–µ–±-–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=WEB_APP_URL))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f'–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å Web App:',
        reply_markup=reply_markup
    )

async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç Web App."""
    if update.message and update.message.web_app_data:
        user_id = update.message.from_user.id
        data_str = update.message.web_app_data.data
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Web App (User ID: {user_id}): {data_str}") # –õ–æ–≥–∏—Ä—É–µ–º

        try:
            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å –∫–∞–∫ JSON (–µ—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ JSON –∏–∑ JS)
            data_obj = json.loads(data_str)
            reply_text = f"‚úÖ –°–ø–∞—Å–∏–±–æ! Web App –ø—Ä–∏—Å–ª–∞–ª–æ JSON: {data_obj}"
        except json.JSONDecodeError:
            # –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            reply_text = f"‚úÖ –°–ø–∞—Å–∏–±–æ! Web App –ø—Ä–∏—Å–ª–∞–ª–æ —Ç–µ–∫—Å—Ç: {data_str}"

        # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —á–∞—Ç Telegram
        await update.message.reply_text(reply_text)

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    if BOT_TOKEN == " ":
        logger.error("–û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω BOT_TOKEN! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à API —Ç–æ–∫–µ–Ω.")
        return # –í—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω

    application = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))

    logger.info(f"–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ó–∞–ø—É—Å–∫ –æ–∂–∏–¥–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–æ–Ω –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ–∫–∞ –≤—ã –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ Ctrl+C)
    application.run_polling()

if __name__ == '__main__':
    main()